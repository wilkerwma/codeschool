# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-19 05:12
from __future__ import unicode_literals

import codeschool.blocks.ace
import codeschool.blocks.core
import codeschool.models.mixins
import codeschool.models.wagtail
import cs_core.models.activity.activity_base
import cs_core.models.activity.grading_method
from django.db import migrations, models
import django.db.models.deletion
import wagtail.contrib.wagtailroutablepage.models
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtaildocs.blocks
import wagtail.wagtailembeds.blocks
import wagtail.wagtailimages.blocks
import wagtail.wagtailsnippets.blocks
import wagtailmarkdown.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailredirects', '0005_capitalizeverbose'),
        ('cs_core', '0002_initial_data'),
        ('wagtailcore', '0028_merge'),
        ('wagtailforms', '0003_capitalizeverbose'),
        ('cs_questions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FormQuestion',
            fields=[
                ('page_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='formquestion_instance', serialize=False, to='wagtailcore.Page')),
                ('content_color', models.CharField(default='#10A2A4', help_text='Personalize the main color for page content.', max_length=20, verbose_name='color')),
                ('short_description', models.CharField(blank=True, help_text='A very brief one-phrase description used in listings.', max_length=140, verbose_name='short description')),
                ('icon_src', models.CharField(blank=True, help_text='Optional icon name that can be used to personalize the activity. Material icons are available by using the "material:" namespace as in "material:menu".', max_length=50, verbose_name='activity icon')),
                ('resources', wagtail.wagtailcore.fields.StreamField((('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('embed', wagtail.wagtailembeds.blocks.EmbedBlock()), ('markdown', wagtailmarkdown.blocks.MarkdownBlock()), ('url', wagtail.wagtailcore.blocks.URLBlock()), ('text', wagtail.wagtailcore.blocks.TextBlock()), ('char', wagtail.wagtailcore.blocks.CharBlock()), ('ace', codeschool.blocks.ace.AceBlock()), ('bool', wagtail.wagtailcore.blocks.BooleanBlock()), ('doc', wagtail.wagtaildocs.blocks.DocumentChooserBlock()), ('snippet', wagtail.wagtailsnippets.blocks.SnippetChooserBlock(cs_core.models.activity.grading_method.GradingMethod)), ('date', wagtail.wagtailcore.blocks.DateBlock()), ('time', wagtail.wagtailcore.blocks.TimeBlock()), ('stream', wagtail.wagtailcore.blocks.StreamBlock((('page', wagtail.wagtailcore.blocks.PageChooserBlock()), ('html', wagtail.wagtailcore.blocks.RawHTMLBlock()))))))),
                ('stem', wagtail.wagtailcore.fields.StreamField((('paragraph', wagtail.wagtailcore.blocks.RichTextBlock()), ('heading', wagtail.wagtailcore.blocks.CharBlock(classname='full title')), ('code', wagtail.wagtailcore.blocks.StructBlock((('language', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('ace/mode/abap', 'ABAP'), ('ace/mode/abc', 'ABC'), ('ace/mode/actionscript', 'ActionScript'), ('ace/mode/ada', 'ADA'), ('ace/mode/apache_conf', 'Apache Conf'), ('ace/mode/asciidoc', 'AsciiDoc'), ('ace/mode/assembly_x86', 'Assembly x86'), ('ace/mode/autohotkey', 'AutoHotKey'), ('ace/mode/batchfile', 'BatchFile'), ('ace/mode/c_cpp', 'C and C++'), ('ace/mode/c9search', 'C9Search'), ('ace/mode/cirru', 'Cirru'), ('ace/mode/clojure', 'Clojure'), ('ace/mode/cobol', 'Cobol'), ('ace/mode/coffee', 'CoffeeScript'), ('ace/mode/coldfusion', 'ColdFusion'), ('ace/mode/csharp', 'C#'), ('ace/mode/css', 'CSS'), ('ace/mode/curly', 'Curly'), ('ace/mode/d', 'D'), ('ace/mode/dart', 'Dart'), ('ace/mode/diff', 'Diff'), ('ace/mode/django', 'Django'), ('ace/mode/dockerfile', 'Dockerfile'), ('ace/mode/dot', 'Dot'), ('ace/mode/dummy', 'Dummy'), ('ace/mode/dummysyntax', 'DummySyntax'), ('ace/mode/eiffel', 'Eiffel'), ('ace/mode/ejs', 'EJS'), ('ace/mode/elixir', 'Elixir'), ('ace/mode/elm', 'Elm'), ('ace/mode/erlang', 'Erlang'), ('ace/mode/forth', 'Forth'), ('ace/mode/ftl', 'FreeMarker'), ('ace/mode/gcode', 'Gcode'), ('ace/mode/gherkin', 'Gherkin'), ('ace/mode/gitignore', 'Gitignore'), ('ace/mode/glsl', 'Glsl'), ('ace/mode/gobstones', 'Gobstones'), ('ace/mode/golang', 'Go'), ('ace/mode/groovy', 'Groovy'), ('ace/mode/haml', 'HAML'), ('ace/mode/handlebars', 'Handlebars'), ('ace/mode/haskell', 'Haskell'), ('ace/mode/haxe', 'haXe'), ('ace/mode/html', 'HTML'), ('ace/mode/html_elixir', 'HTML (Elixir)'), ('ace/mode/html_ruby', 'HTML (Ruby)'), ('ace/mode/ini', 'INI'), ('ace/mode/io', 'Io'), ('ace/mode/jack', 'Jack'), ('ace/mode/jade', 'Jade'), ('ace/mode/java', 'Java'), ('ace/mode/javascript', 'JavaScript'), ('ace/mode/json', 'JSON'), ('ace/mode/jsoniq', 'JSONiq'), ('ace/mode/jsp', 'JSP'), ('ace/mode/jsx', 'JSX'), ('ace/mode/julia', 'Julia'), ('ace/mode/latex', 'LaTeX'), ('ace/mode/lean', 'Lean'), ('ace/mode/less', 'LESS'), ('ace/mode/liquid', 'Liquid'), ('ace/mode/lisp', 'Lisp'), ('ace/mode/livescript', 'LiveScript'), ('ace/mode/logiql', 'LogiQL'), ('ace/mode/lsl', 'LSL'), ('ace/mode/lua', 'Lua'), ('ace/mode/luapage', 'LuaPage'), ('ace/mode/lucene', 'Lucene'), ('ace/mode/makefile', 'Makefile'), ('ace/mode/markdown', 'Markdown'), ('ace/mode/mask', 'Mask'), ('ace/mode/matlab', 'MATLAB'), ('ace/mode/maze', 'Maze'), ('ace/mode/mel', 'MEL'), ('ace/mode/mushcode', 'MUSHCode'), ('ace/mode/mysql', 'MySQL'), ('ace/mode/nix', 'Nix'), ('ace/mode/nsis', 'NSIS'), ('ace/mode/objectivec', 'Objective-C'), ('ace/mode/ocaml', 'OCaml'), ('ace/mode/pascal', 'Pascal'), ('ace/mode/perl', 'Perl'), ('ace/mode/pgsql', 'pgSQL'), ('ace/mode/php', 'PHP'), ('ace/mode/powershell', 'Powershell'), ('ace/mode/praat', 'Praat'), ('ace/mode/prolog', 'Prolog'), ('ace/mode/properties', 'Properties'), ('ace/mode/protobuf', 'Protobuf'), ('ace/mode/python', 'Python'), ('ace/mode/r', 'R'), ('ace/mode/razor', 'Razor'), ('ace/mode/rdoc', 'RDoc'), ('ace/mode/rhtml', 'RHTML'), ('ace/mode/rst', 'RST'), ('ace/mode/ruby', 'Ruby'), ('ace/mode/rust', 'Rust'), ('ace/mode/sass', 'SASS'), ('ace/mode/scad', 'SCAD'), ('ace/mode/scala', 'Scala'), ('ace/mode/scheme', 'Scheme'), ('ace/mode/scss', 'SCSS'), ('ace/mode/sh', 'SH'), ('ace/mode/sjs', 'SJS'), ('ace/mode/smarty', 'Smarty'), ('ace/mode/snippets', 'snippets'), ('ace/mode/soy_template', 'Soy Template'), ('ace/mode/space', 'Space'), ('ace/mode/sql', 'SQL'), ('ace/mode/sqlserver', 'SQLServer'), ('ace/mode/stylus', 'Stylus'), ('ace/mode/svg', 'SVG'), ('ace/mode/swift', 'Swift'), ('ace/mode/tcl', 'Tcl'), ('ace/mode/tex', 'Tex'), ('ace/mode/text', 'Text'), ('ace/mode/textile', 'Textile'), ('ace/mode/toml', 'Toml'), ('ace/mode/twig', 'Twig'), ('ace/mode/typescript', 'Typescript'), ('ace/mode/vala', 'Vala'), ('ace/mode/vbscript', 'VBScript'), ('ace/mode/velocity', 'Velocity'), ('ace/mode/verilog', 'Verilog'), ('ace/mode/vhdl', 'VHDL'), ('ace/mode/wollok', 'Wollok'), ('ace/mode/xml', 'XML'), ('ace/mode/xquery', 'XQuery'), ('ace/mode/yaml', 'YAML')])), ('source', codeschool.blocks.ace.AceBlock())))), ('markdown', wagtailmarkdown.blocks.MarkdownBlock())), blank=True, help_text='Describe what the question is asking and how should the students answer it as clearly as possible. Good questions should not be ambiguous.', null=True, verbose_name='Question description')),
                ('author_name', models.CharField(blank=True, help_text="The author's name, if not the same user as the question owner.", max_length=100, verbose_name="Author's name")),
                ('comments', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='(Optional) Any private information that you want to associate to the question page.', verbose_name='Comments')),
                ('body', wagtail.wagtailcore.fields.StreamField((('numeric', wagtail.wagtailcore.blocks.StructBlock((('name', wagtail.wagtailcore.blocks.CharBlock(help_text='A name used to display this field in forms.', max_legth=200, required=True)), ('value', codeschool.blocks.core.FloatBlock(default=1.0, help_text='Relative weight given to this answer in the question.')), ('answer', codeschool.blocks.core.DecimalBlock(help_text='The numerical value for the correct answer.', required=True)), ('tolerance', codeschool.blocks.core.DecimalBlock(default=0, help_text='Tolerance around the correct answer in which responses are still considered to be correct.'))))), ('boolean', wagtail.wagtailcore.blocks.StructBlock((('name', wagtail.wagtailcore.blocks.CharBlock(help_text='A name used to display this field in forms.', max_legth=200, required=True)), ('value', codeschool.blocks.core.FloatBlock(default=1.0, help_text='Relative weight given to this answer in the question.')), ('answer', wagtail.wagtailcore.blocks.BooleanBlock(help_text='Correct true/false answer.', required=True))))), ('string', wagtail.wagtailcore.blocks.StructBlock((('name', wagtail.wagtailcore.blocks.CharBlock(help_text='A name used to display this field in forms.', max_legth=200, required=True)), ('value', codeschool.blocks.core.FloatBlock(default=1.0, help_text='Relative weight given to this answer in the question.')), ('answer', wagtail.wagtailcore.blocks.TextBlock(help_text='String with the correct answer.', required=True)), ('case_sensitive', wagtail.wagtailcore.blocks.BooleanBlock(default=False, help_text='If true, the response will be sensitive to the case.')), ('use_regex', wagtail.wagtailcore.blocks.BooleanBlock(default=False, help_text='If true, the answer string is interpreted as a regular expression. A response is considered to be correct if it matches the regular expression. Remember to use both ^ and $ to match thebegining and the end of the string, if that is desired.'))))), ('date', wagtail.wagtailcore.blocks.StructBlock((('name', wagtail.wagtailcore.blocks.CharBlock(help_text='A name used to display this field in forms.', max_legth=200, required=True)), ('value', codeschool.blocks.core.FloatBlock(default=1.0, help_text='Relative weight given to this answer in the question.')), ('answer', wagtail.wagtailcore.blocks.DateBlock(help_text='Required date.', required=True))))), ('content', wagtail.wagtailcore.blocks.StreamBlock((('description', wagtail.wagtailcore.blocks.RichTextBlock()), ('code', wagtail.wagtailcore.blocks.StructBlock((('language', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('ace/mode/abap', 'ABAP'), ('ace/mode/abc', 'ABC'), ('ace/mode/actionscript', 'ActionScript'), ('ace/mode/ada', 'ADA'), ('ace/mode/apache_conf', 'Apache Conf'), ('ace/mode/asciidoc', 'AsciiDoc'), ('ace/mode/assembly_x86', 'Assembly x86'), ('ace/mode/autohotkey', 'AutoHotKey'), ('ace/mode/batchfile', 'BatchFile'), ('ace/mode/c_cpp', 'C and C++'), ('ace/mode/c9search', 'C9Search'), ('ace/mode/cirru', 'Cirru'), ('ace/mode/clojure', 'Clojure'), ('ace/mode/cobol', 'Cobol'), ('ace/mode/coffee', 'CoffeeScript'), ('ace/mode/coldfusion', 'ColdFusion'), ('ace/mode/csharp', 'C#'), ('ace/mode/css', 'CSS'), ('ace/mode/curly', 'Curly'), ('ace/mode/d', 'D'), ('ace/mode/dart', 'Dart'), ('ace/mode/diff', 'Diff'), ('ace/mode/django', 'Django'), ('ace/mode/dockerfile', 'Dockerfile'), ('ace/mode/dot', 'Dot'), ('ace/mode/dummy', 'Dummy'), ('ace/mode/dummysyntax', 'DummySyntax'), ('ace/mode/eiffel', 'Eiffel'), ('ace/mode/ejs', 'EJS'), ('ace/mode/elixir', 'Elixir'), ('ace/mode/elm', 'Elm'), ('ace/mode/erlang', 'Erlang'), ('ace/mode/forth', 'Forth'), ('ace/mode/ftl', 'FreeMarker'), ('ace/mode/gcode', 'Gcode'), ('ace/mode/gherkin', 'Gherkin'), ('ace/mode/gitignore', 'Gitignore'), ('ace/mode/glsl', 'Glsl'), ('ace/mode/gobstones', 'Gobstones'), ('ace/mode/golang', 'Go'), ('ace/mode/groovy', 'Groovy'), ('ace/mode/haml', 'HAML'), ('ace/mode/handlebars', 'Handlebars'), ('ace/mode/haskell', 'Haskell'), ('ace/mode/haxe', 'haXe'), ('ace/mode/html', 'HTML'), ('ace/mode/html_elixir', 'HTML (Elixir)'), ('ace/mode/html_ruby', 'HTML (Ruby)'), ('ace/mode/ini', 'INI'), ('ace/mode/io', 'Io'), ('ace/mode/jack', 'Jack'), ('ace/mode/jade', 'Jade'), ('ace/mode/java', 'Java'), ('ace/mode/javascript', 'JavaScript'), ('ace/mode/json', 'JSON'), ('ace/mode/jsoniq', 'JSONiq'), ('ace/mode/jsp', 'JSP'), ('ace/mode/jsx', 'JSX'), ('ace/mode/julia', 'Julia'), ('ace/mode/latex', 'LaTeX'), ('ace/mode/lean', 'Lean'), ('ace/mode/less', 'LESS'), ('ace/mode/liquid', 'Liquid'), ('ace/mode/lisp', 'Lisp'), ('ace/mode/livescript', 'LiveScript'), ('ace/mode/logiql', 'LogiQL'), ('ace/mode/lsl', 'LSL'), ('ace/mode/lua', 'Lua'), ('ace/mode/luapage', 'LuaPage'), ('ace/mode/lucene', 'Lucene'), ('ace/mode/makefile', 'Makefile'), ('ace/mode/markdown', 'Markdown'), ('ace/mode/mask', 'Mask'), ('ace/mode/matlab', 'MATLAB'), ('ace/mode/maze', 'Maze'), ('ace/mode/mel', 'MEL'), ('ace/mode/mushcode', 'MUSHCode'), ('ace/mode/mysql', 'MySQL'), ('ace/mode/nix', 'Nix'), ('ace/mode/nsis', 'NSIS'), ('ace/mode/objectivec', 'Objective-C'), ('ace/mode/ocaml', 'OCaml'), ('ace/mode/pascal', 'Pascal'), ('ace/mode/perl', 'Perl'), ('ace/mode/pgsql', 'pgSQL'), ('ace/mode/php', 'PHP'), ('ace/mode/powershell', 'Powershell'), ('ace/mode/praat', 'Praat'), ('ace/mode/prolog', 'Prolog'), ('ace/mode/properties', 'Properties'), ('ace/mode/protobuf', 'Protobuf'), ('ace/mode/python', 'Python'), ('ace/mode/r', 'R'), ('ace/mode/razor', 'Razor'), ('ace/mode/rdoc', 'RDoc'), ('ace/mode/rhtml', 'RHTML'), ('ace/mode/rst', 'RST'), ('ace/mode/ruby', 'Ruby'), ('ace/mode/rust', 'Rust'), ('ace/mode/sass', 'SASS'), ('ace/mode/scad', 'SCAD'), ('ace/mode/scala', 'Scala'), ('ace/mode/scheme', 'Scheme'), ('ace/mode/scss', 'SCSS'), ('ace/mode/sh', 'SH'), ('ace/mode/sjs', 'SJS'), ('ace/mode/smarty', 'Smarty'), ('ace/mode/snippets', 'snippets'), ('ace/mode/soy_template', 'Soy Template'), ('ace/mode/space', 'Space'), ('ace/mode/sql', 'SQL'), ('ace/mode/sqlserver', 'SQLServer'), ('ace/mode/stylus', 'Stylus'), ('ace/mode/svg', 'SVG'), ('ace/mode/swift', 'Swift'), ('ace/mode/tcl', 'Tcl'), ('ace/mode/tex', 'Tex'), ('ace/mode/text', 'Text'), ('ace/mode/textile', 'Textile'), ('ace/mode/toml', 'Toml'), ('ace/mode/twig', 'Twig'), ('ace/mode/typescript', 'Typescript'), ('ace/mode/vala', 'Vala'), ('ace/mode/vbscript', 'VBScript'), ('ace/mode/velocity', 'Velocity'), ('ace/mode/verilog', 'Verilog'), ('ace/mode/vhdl', 'VHDL'), ('ace/mode/wollok', 'Wollok'), ('ace/mode/xml', 'XML'), ('ace/mode/xquery', 'XQuery'), ('ace/mode/yaml', 'YAML')])), ('source', codeschool.blocks.ace.AceBlock())))), ('markdown', wagtailmarkdown.blocks.MarkdownBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('document', wagtail.wagtaildocs.blocks.DocumentChooserBlock()), ('page', wagtail.wagtailcore.blocks.PageChooserBlock()))))), help_text='You can insert different types of fields for the student answers. This works as a simple form that accepts any combination of thedifferent types of answer fields.', verbose_name='Fields')),
                ('grading_method', models.ForeignKey(blank=True, default=cs_core.models.activity.response_context.grading_method_best, help_text='Choose the strategy for grading this activity.', on_delete=django.db.models.deletion.SET_DEFAULT, to='cs_core.GradingMethod')),
            ],
            options={
                'abstract': False,
                'permissions': (('download_question', 'Can download question files'),),
            },
            bases=(wagtail.contrib.wagtailroutablepage.models.RoutablePageMixin, codeschool.models.mixins.CopyMixin, codeschool.models.wagtail.CodeschoolPageMixin, codeschool.models.mixins.MigrateMixin, 'wagtailcore.page'),
        ),
        migrations.RemoveField(
            model_name='simplequestion',
            name='grading_method',
        ),
        migrations.RemoveField(
            model_name='simplequestion',
            name='page_ptr',
        ),
        migrations.DeleteModel(
            name='SimpleQuestionResponse',
        ),
        migrations.CreateModel(
            name='FormResponseItem',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=(codeschool.models.mixins.MigrateMixin, 'cs_questions.questionresponseitem'),
        ),
        migrations.DeleteModel(
            name='SimpleQuestion',
        ),
    ]
